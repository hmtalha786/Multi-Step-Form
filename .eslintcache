[{"C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\App.tsx":"1","C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\components\\AccountInformation.tsx":"2","C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\components\\PersonalInformation.tsx":"3","C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\components\\Rivew.tsx":"4","C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\Stepper\\index.tsx":"5","C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\index.tsx":"6"},{"size":116,"mtime":1638526975233,"results":"7","hashOfConfig":"8"},{"size":5801,"mtime":1638528550733,"results":"9","hashOfConfig":"8"},{"size":3748,"mtime":1638527802459,"results":"10","hashOfConfig":"8"},{"size":3006,"mtime":1638528510863,"results":"11","hashOfConfig":"8"},{"size":2034,"mtime":1638527094255,"results":"12","hashOfConfig":"8"},{"size":219,"mtime":1638526204412,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yxtgsk",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\App.tsx",[],"C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\components\\AccountInformation.tsx",["28","29"],"import React, { FC } from \"react\";\nimport { Field, Form, useField, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  CheckboxProps,\n  FormControlLabel,\n  Checkbox,\n  Container,\n} from \"@material-ui/core\";\nimport { boolean } from \"yup\";\n\ninterface accountInformation {\n  email: string;\n  userName: string;\n  password: string;\n  confirmPassword: string;\n  terms: boolean;\n}\n\nconst initialValues: accountInformation = {\n  email: \"\",\n  userName: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n  terms: false,\n};\n\ninterface Props {\n  submit: React.Dispatch<React.SetStateAction<number>>;\n  setFormValues: React.Dispatch<React.SetStateAction<{}>>;\n  prevValues: any;\n}\n\nconst validationSchema = Yup.object().shape({\n  userEmail: Yup.string().email().required(\"Required\"),\n  userName: Yup.string().required(\"Required\"),\n  password: Yup.string()\n    .required(\"Required\")\n    .min(8, \"minimum length of password is 8\"),\n  // this code is used for for checking the previous password is equal to newst password\n  confirmPassword: Yup.string()\n    .required(\"Required\")\n    .oneOf([Yup.ref(\"password\")], \"Passwored is not matching\"),\n  terms: boolean().oneOf([true]),\n});\n\nconst AccountInformation: FC<Props> = ({\n  submit,\n  setFormValues,\n  prevValues,\n}) => {\n  return (\n    <div className=\"div\">\n      <Formik\n        initialValues={prevValues}\n        onSubmit={(values: accountInformation) => {\n          console.log(values);\n          submit(2);\n          setFormValues({ ...values, ...prevValues });\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ dirty, isValid }) => {\n          return (\n            <Form>\n              <div>\n                {/* <Typography className=\"heading\" variant=\"h5\">\n                  Account Informatoin\n                </Typography> */}\n\n                <Container maxWidth=\"sm\">\n                  <Grid container spacing={3} justify=\"center\" className=\"data\">\n                    <Grid item sm={12} md={12} lg={12}>\n                      <Field\n                        as={TextField}\n                        name=\"userEmail\"\n                        type=\"email\"\n                        variant=\"outlined\"\n                        helperText={<ErrorMessage name=\"userEmail\" />}\n                        label=\"Email\"\n                        fullWidth\n                      />\n                    </Grid>\n\n                    <Grid item sm={12} md={12} lg={12}>\n                      <Field\n                        as={TextField}\n                        name=\"userName\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        helperText={<ErrorMessage name=\"userName\" />}\n                        label=\"UserName\"\n                        fullWidth\n                      />\n                    </Grid>\n\n                    <Grid item sm={12} md={12} lg={12}>\n                      <Field\n                        as={TextField}\n                        name=\"password\"\n                        variant=\"outlined\"\n                        helperText={\n                          <ErrorMessage name=\"password\" className=\"requier\" />\n                        }\n                        label=\"Password\"\n                        fullWidth\n                        type=\"password\"\n                      />\n                    </Grid>\n\n                    <Grid item sm={12} md={12} lg={12}>\n                      <Field\n                        as={TextField}\n                        name=\"confirmPassword\"\n                        variant=\"outlined\"\n                        helperText={<ErrorMessage name=\"confirmPassword\" />}\n                        label=\"ConfirmPassword\"\n                        fullWidth\n                        type=\"password\"\n                      />\n                    </Grid>\n\n                    <Grid item sm={12} md={12} lg={12}>\n                      <div className=\"checkbox\">\n                        <MyCheckbox\n                          // style={{ textAlign: \"left\" }}\n                          name=\"terms\"\n                        />\n                        <b>Accept Terms and Condition</b>\n                      </div>\n                    </Grid>\n\n                    <Grid item sm={6} md={6} lg={6} className=\"buttons\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => submit(0)}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        disabled={!(dirty && isValid)}\n                        color=\"primary\"\n                        type=\"submit\"\n                      >\n                        Next\n                      </Button>\n                    </Grid>\n\n                    {/* <div className=\"buttons\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => submit(0)}\n                      >\n                        Back\n                      </Button>\n                    </div> */}\n                  </Grid>\n                </Container>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport interface MyCheckboxProps extends CheckboxProps {\n  name: string;\n  value?: string | number;\n  label?: string;\n}\n\nexport function MyCheckbox(props: MyCheckboxProps) {\n  const [field] = useField({\n    name: props.name,\n    type: \"checkbox\",\n    value: props.value,\n  });\n\n  return (\n    <FormControlLabel\n      control={<Checkbox {...props} {...field} />}\n      label={props.label}\n    />\n  );\n}\n\nexport default AccountInformation;\n","C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\components\\PersonalInformation.tsx",["30"],"C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\components\\Rivew.tsx",["31"],"import React, { FC } from \"react\";\nimport {\n  AccordionDetails,\n  Typography,\n  Button,\n  Grid,\n  Container,\n} from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\n\ninterface Props {\n  submit: React.Dispatch<React.SetStateAction<number>>;\n  formValues: any;\n}\n\nconst Review: FC<Props> = ({ formValues, submit }) => {\n  return (\n    <Formik\n      initialValues={formValues}\n      onSubmit={(values) => {\n        alert(\"Thanks for submitting\");\n        window.location.reload(true);\n        submit(0);\n      }}\n    >\n      <Form className=\"form_Content\">\n        {/* <Typography className=\"heading\" variant=\"h4\">\n          Review youn Information before Submit\n        </Typography> */}\n        <Container maxWidth=\"sm\">\n          <Grid container spacing={3} justify=\"center\">\n            <Grid item sm={12} xs={12} lg={12} md={12} className=\"data\">\n              {/* <table>\n                <tr>\n                  <th>Company</th>\n                  <th>Contact</th>\n                  <th>Country</th>\n                </tr>\n                <tr>\n                  <td>Alfreds Futterkiste</td>\n                  <td>Maria Anders</td>\n                  <td>Germany</td>\n                </tr>\n                <tr>\n                  <td>Centro comercial Moctezuma</td>\n                  <td>Francisco Chang</td>\n                  <td>Mexico</td>\n                </tr>\n              </table> */}\n              <AccordionDetails className=\"review_Content\">\n                <p style={{ textAlign: \"right\" }}>Name: </p>\n                <p>{formValues.firstName.concat(formValues.lastName)}</p>\n              </AccordionDetails>\n\n              <AccordionDetails className=\"review_Content\">\n                <p>Age: </p>\n                <p>{formValues.age}</p>\n              </AccordionDetails>\n\n              <AccordionDetails className=\"review_Content\">\n                <p>Phone Number: </p>\n                <p>{formValues.phoneNumber}</p>\n              </AccordionDetails>\n\n              <AccordionDetails className=\"review_Content\">\n                <p>Email ID </p>\n                <p>{formValues.userEmail}</p>\n              </AccordionDetails>\n              <AccordionDetails className=\"review_Content\">\n                <p>User Name </p>\n                <p>{formValues.userName}</p>\n              </AccordionDetails>\n              <AccordionDetails className=\"review_Content\">\n                <p>Password</p>\n                <p>{formValues.password}</p>\n              </AccordionDetails>\n\n              <div className=\"buttons\">\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => submit(1)}\n                >\n                  Back\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </div>\n            </Grid>\n          </Grid>\n        </Container>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default Review;\n","C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\Stepper\\index.tsx",[],"C:\\Users\\Muhammad Talha\\Desktop\\React-Form\\src\\index.tsx",[],{"ruleId":"32","severity":1,"message":"33","line":8,"column":3,"nodeType":"34","messageId":"35","endLine":8,"endColumn":13},{"ruleId":"32","severity":1,"message":"36","line":24,"column":7,"nodeType":"34","messageId":"35","endLine":24,"endColumn":40},{"ruleId":"32","severity":1,"message":"36","line":20,"column":7,"nodeType":"34","messageId":"35","endLine":20,"endColumn":34},{"ruleId":"32","severity":1,"message":"33","line":4,"column":3,"nodeType":"34","messageId":"35","endLine":4,"endColumn":13},"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'initialValues' is assigned a value but never used."]